@using BettingApplication.Models
@model BettingApplication.ViewModels.TwoPlayersPartialView
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    body {
        background-color: #121212;
        color: white;
    }

    th {
        color: white;
        text-align: center;
    }

    td {
        color: white;
    }

    .bet-slip {
        display: block;
        position: absolute;
        background-color: black;
        height: 85vh;
        width: 29vw;
        margin-right: 0;
        margin-left: 70vw;
        overflow-y: scroll;
        overflow-x: hidden;
        justify-content: space-around;
    }

    .matches {
        display: block;
        position: absolute;
        width: 70vw;
        margin-left: 0;
        height: 85vh;
        margin-right: 0;
        overflow-y: scroll;
        overflow-x: hidden;
        /*border: solid 5px white;*/
        padding-left: 1.5vw;
    }


    .bet-slip-bet {
        font-size: 12px;
        text-align: center;
        height: 10vh;
    }

    ::-webkit-scrollbar {
        width: 10px;
    }
</style>
<h1>Bet Slip</h1>
<table class="bet-slip">
    <thead>
        <tr>
            <th>
                Home
            </th>
            <th>
                Away
            </th>
            <th>
                Time
            </th>
            <th>
                Type
            </th>
            <th>
                Odd
            </th>
            <th>
                Top
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
    @using (Html.BeginForm("UserBet", "UserBets", new { CashOut = TempData["CashOut"], TotalOdd = TempData["Odd"] }, FormMethod.Post))
    {
        @foreach (var item in Model.BetSlip)
        {
            {
        <tr class="bet-slip-bet">
            <td>
                @Html.DisplayFor(modelItem => item.Match.HomeTeam.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Match.AwayTeam.Name)
            </td>
            <td>
                @item.Match.Time.ToShortTimeString()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Odd)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TopMatch)
            </td>
            <td>
                <a asp-controller="BetSlips" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
            </td>
        </tr>
            }
        }
        <tr>
            <td>Saldo: @TempData["Saldo"]</td>
            <td>Total Odd: @TempData["Odd"]</td>
            <td>Number of matches: @TempData["NumberOfMatches"]</td>
            <td>Cash Out: <span id="cashOut"></span> @TempData["CashOut"]</td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td><input type="text" name="Stake" id="stake" pattern="^(?!0\.00)\d{1,6}(,\d{3})*(\.\d\d)?$" placeholder="Enter the amount in format 0.00" class="form-control" /></td>
            <td>-5%: <span id="Tax"></span> @TempData["Tax"]</td>
            <td><button type="submit" value="Potvrdi" name="submit" class="btn btn-success">Accept</button></td>
            <td><button type="submit" value="Remove" name="submit" class="btn btn-danger">Clear</button></td>
        </tr>

    }
    </tbody>
</table>

<table class="table matches">
    <thead>
    <tr>
        <th>
            First player
        </th>
        <th>
            Second player
        </th>
        <th>
            Time
        </th>
        <th>
            1
        </th>
        <th>
            2
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.TwoPlayerMatches)
        {
            @if (item.Time > DateTime.Now)
            {
                @using (Html.BeginForm("BetTwoPlayer", "BetSlips", new {matchId = item.Id, top = false}, FormMethod.Post))
                {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstPlayer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SecondPlayer)
            </td>
            <td>
                @item.Time.ToShortTimeString()
            </td>
            <td>
                @if (item._1 > 1)
                {
                    <button type="submit" id=@item.Id , name="type" value="1" class="btn btn-primary">@item._1</button>
                }
            </td>
            <td>
                @if (item._2 > 1)
                {
                    <button type="submit" id=@item.Id , name="type" value="2" class="btn btn-primary">@item._2</button>
                }
            </td>
            @if (User.IsInRole("Admin"))
            {
                <td>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="TopMatch" asp-route-id="@item.Id">TopMatch</a>
                </td>
            }
        </tr>
                }
            }

        }
        </tbody>
</table>
<script>

    var odd = parseFloat(("@TempData["Odd"]").replace(",","."));

    var stakeDOM =  document.getElementById("stake")
    stakeDOM.addEventListener("click", function (event) {
        event.preventDefault()

        document.getElementById("cashOut").innerHTML = ((parseFloat(stakeDOM.value) / 100 * 95) * odd).toFixed(2)
        document.getElementById("Tax").innerHTML = ((parseFloat(stakeDOM.value) *0.95).toFixed(2));

    });
</script>
@if (@TempData["betmsg"] != null)
{
    <script>alert("@TempData["betmsg"]");</script>
}